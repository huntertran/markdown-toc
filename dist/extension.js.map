{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://auto-markdown-toc/./src/Utilities.ts","webpack://auto-markdown-toc/./src/TocManager.ts","webpack://auto-markdown-toc/./src/models/RegexStrings.ts","webpack://auto-markdown-toc/./src/models/AnchorMode.ts","webpack://auto-markdown-toc/./src/models/Anchor.ts","webpack://auto-markdown-toc/./src/models/Dictionary.ts","webpack://auto-markdown-toc/./src/models/Options.ts","webpack://auto-markdown-toc/./node_modules/emoji-regex/index.js","webpack://auto-markdown-toc/external commonjs \"vscode\"","webpack://auto-markdown-toc/./src/ConfigManager.ts","webpack://auto-markdown-toc/./node_modules/remove-markdown/index.js","webpack://auto-markdown-toc/./src/AutoMarkdownToc.ts","webpack://auto-markdown-toc/./node_modules/anchor-markdown-header/anchor-markdown-header.js","webpack://auto-markdown-toc/external node-commonjs \"os\"","webpack://auto-markdown-toc/./src/HeaderManager.ts","webpack://auto-markdown-toc/./src/models/Header.ts","webpack://auto-markdown-toc/webpack/bootstrap","webpack://auto-markdown-toc/./src/extension.ts"],"sourcesContent":["import { TextDocument } from \"vscode\";\r\nimport { RegexStrings } from \"./models/RegexStrings\";\r\n\r\nexport class Utilities {\r\n    public static getNextLineIndexIsNotInCode(index: number, doc: TextDocument) {\r\n        for (let currentLineIndex = index + 1; currentLineIndex < doc.lineCount; currentLineIndex++) {\r\n            if (this.isLineStartOrEndOfCodeBlock(currentLineIndex, doc)) {\r\n                return currentLineIndex + 1;\r\n            }\r\n        }\r\n\r\n        return doc.lineCount - 1;\r\n    }\r\n\r\n    public static isLineStartOrEndOfCodeBlock(lineNumber: number, doc: TextDocument) {\r\n        let nextLine = doc.lineAt(lineNumber).text;\r\n\r\n        let isCodeStyle1 = nextLine.match(RegexStrings.Instance.REGEXP_CODE_BLOCK1) !== null;\r\n        let isCodeStyle2 = nextLine.match(RegexStrings.Instance.REGEXP_CODE_BLOCK2) !== null;\r\n\r\n        return isCodeStyle1 || isCodeStyle2;\r\n    }\r\n}","import {\r\n    Position,\r\n    Range,\r\n    TextDocumentContentChangeEvent,\r\n    window\r\n} from \"vscode\";\r\n\r\nimport { RegexStrings } from \"./models/RegexStrings\";\r\nimport { Utilities } from \"./Utilities\";\r\n\r\nexport class TocManager {\r\n    // private configManager: ConfigManager;\r\n\r\n    private tocRange: Range | undefined;\r\n\r\n    constructor() {\r\n        // this.configManager = configManager;\r\n    }\r\n\r\n    private scanForTocRange(): void {\r\n        let editor = window.activeTextEditor;\r\n\r\n        if (editor === undefined) {\r\n            this.tocRange = new Range(0, 0, 0, 0);\r\n            return;\r\n        }\r\n\r\n        let doc = editor.document;\r\n        let start, end: Position | undefined;\r\n\r\n        for (let index = 0; index < doc.lineCount; index++) {\r\n\r\n            if (Utilities.isLineStartOrEndOfCodeBlock(index, doc)) {\r\n                index = Utilities.getNextLineIndexIsNotInCode(index, doc);\r\n            }\r\n\r\n            let lineText = doc.lineAt(index).text;\r\n\r\n            if ((start === undefined) && (lineText.match(RegexStrings.Instance.REGEXP_TOC_START) && !lineText.match(RegexStrings.Instance.REGEXP_IGNORE_TITLE))) {\r\n                start = new Position(index, 0);\r\n            }\r\n            else if (lineText.match(RegexStrings.Instance.REGEXP_TOC_STOP)) {\r\n                end = new Position(index, lineText.length);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if ((start === undefined) || (end === undefined)) {\r\n            start = editor.selection.active;\r\n            end = editor.selection.active;\r\n        }\r\n\r\n        this.tocRange = new Range(start, end);\r\n    }\r\n\r\n    /**\r\n     * Get TOC range, in case of no TOC, return the active line\r\n     * In case of the editor is not available, return the first line\r\n    */\r\n    public getTocRange(): Range {\r\n        this.scanForTocRange();\r\n\r\n        if (this.tocRange === undefined) {\r\n            this.tocRange = new Range(0, 0, 0, 0);\r\n        }\r\n\r\n        return this.tocRange;\r\n    }\r\n\r\n    public updateTocRange(contentChanges: readonly TextDocumentContentChangeEvent[]): void {\r\n        for (let index = 0; index < contentChanges.length; index++) {\r\n            if (this.tocRange === undefined ||\r\n                contentChanges[index].range.start.line === this.tocRange?.start.line ||\r\n                contentChanges[index].range.end.line === this.tocRange?.end.line) {\r\n                this.scanForTocRange();\r\n            }\r\n        }\r\n    }\r\n}","export class RegexStrings {\r\n    REGEXP_TOC_START = /\\s*<!--(.*)[^\\/]TOC(.*)-->/gi;\r\n    REGEXP_TOC_STOP = /\\s*<!--(.*)\\/TOC(.*)-->/gi;\r\n    REGEXP_TOC_CONFIG = /\\w+[:=][^\\s]+/gi;\r\n    REGEXP_TOC_CONFIG_ITEM = /(\\w+)[:=]([^\\s]+)/;\r\n    REGEXP_MARKDOWN_ANCHOR = /^<a id=\"markdown-.+\" name=\".+\"><\\/a\\>/;\r\n    REGEXP_CODE_BLOCK1 = /^\\s?```/;\r\n    REGEXP_CODE_BLOCK2 = /^\\s?~~~/;\r\n    REGEXP_ANCHOR = /\\[.+\\]\\(#(.+)\\)/;\r\n    REGEXP_IGNORE_TITLE = /<!--\\s*TOC\\s+ingore:true\\s*-->/si;\r\n\r\n    REGEXP_HEADER_META = /^(\\#*)\\s*((\\d*\\.?)*)\\s*(.+)/;\r\n    REGEXP_UNIQUE_CONFIG_START = /\\s*<!--(.*)[^\\/]TOC UNIQUE CONFIGS(.*)-->/gi;\r\n    REGEXP_UNIQUE_CONFIG_STOP = /\\s*<!--(.*)\\/TOC UNIQUE CONFIGS(.*)-->/gi;\r\n    REGEXP_UNIQUE_CONFIG_LINE = /\\s*<!--( *)(\\w+)[:](\\w+)( *)-->/gi;\r\n\r\n    private static _instance: RegexStrings;\r\n\r\n    private constructor() { }\r\n\r\n    public static get Instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n}","export enum AnchorMode{\r\n    github = \"github.com\",\r\n    bitbucket = \"bitbucket.org\",\r\n    ghost = \"ghost.org\",\r\n    gitlab = \"gitlab.com\"\r\n}","import { Position, Range } from \"vscode\";\r\n\r\nexport class Anchor {\r\n    id: string = \"\";\r\n    name: string = \"\";\r\n\r\n    range: Range = new Range(0, 0, 0, 0);\r\n\r\n    constructor(headerText: string) {\r\n        headerText = headerText.toLowerCase().replace(/\\s/gi, \"-\");\r\n        this.id = \"markdown-\" + encodeURIComponent(headerText);\r\n        this.name = encodeURIComponent(headerText);\r\n    }\r\n}","export class Dictionary {\r\n    key: string;\r\n    lowerCaseKey: string;\r\n    workspaceValue: any;\r\n    uniqueValue: any;\r\n\r\n    constructor(key: string, defaultWorkspaceValue: string | number | string[] | boolean) {\r\n        this.key = key;\r\n        this.lowerCaseKey = key.toLocaleLowerCase();\r\n        this.workspaceValue = defaultWorkspaceValue;\r\n    }\r\n\r\n    public get value() {\r\n        if (this.uniqueValue !== undefined) {\r\n            return this.uniqueValue;\r\n        }\r\n\r\n        return this.workspaceValue;\r\n    }\r\n}","import { Dictionary } from './Dictionary';\r\nimport { AnchorMode } from './AnchorMode';\r\n\r\nexport class Options {\r\n\r\n    // current document options\r\n    optionsFlag: string[] = [];\r\n    isProgrammaticallySave: boolean = false;\r\n    isOrderedListDetected: boolean = false;\r\n\r\n    // workspace settings\r\n    DEPTH_FROM: Dictionary = new Dictionary(\"depthFrom\", 1);\r\n    DEPTH_TO: Dictionary = new Dictionary(\"depthTo\", 6);\r\n    INSERT_ANCHOR: Dictionary = new Dictionary(\"insertAnchor\", false);\r\n    WITH_LINKS: Dictionary = new Dictionary(\"withLinks\", true);\r\n    ORDERED_LIST: Dictionary = new Dictionary(\"orderedList\", false);\r\n    UPDATE_ON_SAVE: Dictionary = new Dictionary(\"updateOnSave\", true);\r\n    ANCHOR_MODE: Dictionary = new Dictionary(\"anchorMode\", AnchorMode.github);\r\n    BULLET_CHAR: Dictionary = new Dictionary(\"bulletCharacter\", \"-\");\r\n    DETECT_AUTO_SET_SECTION: Dictionary = new Dictionary(\"detectAndAutoSetSection\", false);\r\n\r\n    extensionName: string = \"markdown-toc\";\r\n    EOL = require('os').EOL;\r\n\r\n    // language configuration\r\n    lineEnding: string = \"\";\r\n    tabSize: number = 2;\r\n    insertSpaces: boolean = false;\r\n    autoSave: boolean = false;\r\n\r\n    // special characters\r\n    tab = '\\t';\r\n}","module.exports = () => {\n\t// https://mths.be/emoji\n\treturn /(?:[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC3\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDD-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF6](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7C\\uDE80-\\uDE86\\uDE90-\\uDEAC\\uDEB0-\\uDEBA\\uDEC0-\\uDEC2\\uDED0-\\uDED9\\uDEE0-\\uDEE7]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?))/g;\n};\n","module.exports = require(\"vscode\");","import { RegexStrings } from './models/RegexStrings';\nimport { Options } from './models/Options';\nimport {\n    workspace,\n    window\n} from 'vscode';\n\nexport class ConfigManager {\n\n    options = new Options();\n\n    public updateOptions() {\n        this.loadConfigurations();\n        this.loadCustomOptions();\n    }\n\n    public loadConfigurations() {\n        this.options.DEPTH_FROM.workspaceValue = <number>workspace.getConfiguration(this.options.extensionName).get(this.options.DEPTH_FROM.key);\n        this.options.DEPTH_TO.workspaceValue = <number>workspace.getConfiguration(this.options.extensionName).get(this.options.DEPTH_TO.key);\n        this.options.INSERT_ANCHOR.workspaceValue = <boolean>workspace.getConfiguration(this.options.extensionName).get(this.options.INSERT_ANCHOR.key);\n        this.options.WITH_LINKS.workspaceValue = <boolean>workspace.getConfiguration(this.options.extensionName).get(this.options.WITH_LINKS.key);\n        this.options.ORDERED_LIST.workspaceValue = <boolean>workspace.getConfiguration(this.options.extensionName).get(this.options.ORDERED_LIST.key);\n        this.options.UPDATE_ON_SAVE.workspaceValue = <boolean>workspace.getConfiguration(this.options.extensionName).get(this.options.UPDATE_ON_SAVE.key);\n        this.options.ANCHOR_MODE.workspaceValue = <string>workspace.getConfiguration(this.options.extensionName).get(this.options.ANCHOR_MODE.key);\n        this.options.BULLET_CHAR.workspaceValue = <string>workspace.getConfiguration(this.options.extensionName).get(this.options.BULLET_CHAR.key);\n        this.options.DETECT_AUTO_SET_SECTION.workspaceValue = <boolean>workspace.getConfiguration(this.options.extensionName).get(this.options.DETECT_AUTO_SET_SECTION.key);\n\n        this.options.lineEnding = <string>workspace.getConfiguration(\"files\", null).get(\"eol\");\n        if (this.options.lineEnding === 'auto') {\n            this.options.lineEnding = <string>this.options.EOL;\n        }\n\n        this.options.tabSize = <number>workspace.getConfiguration(\"[markdown]\", null)[\"editor.tabSize\"];\n        if (this.options.tabSize === undefined || this.options.tabSize === null) {\n            this.options.tabSize = <number>workspace.getConfiguration(\"editor\", null).get(\"tabSize\");\n        }\n\n        this.options.insertSpaces = <boolean>workspace.getConfiguration(\"[markdown]\", null)[\"editor.insertSpaces\"];\n        if (this.options.insertSpaces === undefined || this.options.insertSpaces === null) {\n            this.options.insertSpaces = <boolean>workspace.getConfiguration(\"editor\", null).get(\"insertSpaces\");\n        }\n\n        if (this.options.insertSpaces && this.options.tabSize > 0) {\n            this.options.tab = \" \".repeat(this.options.tabSize);\n        }\n\n        if (<string>workspace.getConfiguration(\"files\", null).get(\"autoSave\") !== \"off\") {\n            this.options.autoSave = true;\n        }\n    }\n\n    /**\n     * DEPRECATED\n     * use single line unique options instead\n     */\n    public loadCustomOptions() {\n        this.options.optionsFlag = [];\n\n        let editor = window.activeTextEditor;\n        if (editor === undefined) {\n            return;\n        }\n\n        for (let index = 0; index < editor.document.lineCount; index++) {\n            let lineText = editor.document.lineAt(index).text;\n\n            if (lineText.match(RegexStrings.Instance.REGEXP_TOC_START)) {\n                let options = lineText.match(RegexStrings.Instance.REGEXP_TOC_CONFIG);\n\n                if (options !== null) {\n                    options.forEach(element => {\n                        let pair = RegexStrings.Instance.REGEXP_TOC_CONFIG_ITEM.exec(element);\n\n                        if (pair !== null) {\n                            let key = pair[1].toLocaleLowerCase();\n                            let value = pair[2];\n\n                            switch (key) {\n                                case this.options.DEPTH_FROM.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.DEPTH_FROM.uniqueValue = this.parseValidNumber(value);\n                                    break;\n                                case this.options.DEPTH_TO.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.DEPTH_TO.uniqueValue = Math.max(this.parseValidNumber(value), this.options.DEPTH_FROM.value);\n                                    break;\n                                case this.options.INSERT_ANCHOR.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.INSERT_ANCHOR.uniqueValue = this.parseBool(value);\n                                    break;\n                                case this.options.WITH_LINKS.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.WITH_LINKS.uniqueValue = this.parseBool(value);\n                                    break;\n                                case this.options.ORDERED_LIST.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.ORDERED_LIST.uniqueValue = this.parseBool(value);\n                                    break;\n                                case this.options.UPDATE_ON_SAVE.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.UPDATE_ON_SAVE.uniqueValue = this.parseBool(value);\n                                    break;\n                                case this.options.ANCHOR_MODE.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.ANCHOR_MODE.uniqueValue = value;\n                                    break;\n                                case this.options.BULLET_CHAR.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.BULLET_CHAR.uniqueValue = value;\n                                    break;\n                                case this.options.DETECT_AUTO_SET_SECTION.lowerCaseKey:\n                                    this.options.optionsFlag.push(key);\n                                    this.options.DETECT_AUTO_SET_SECTION.uniqueValue = value;\n                                    break;\n                            }\n                        }\n                    });\n                }\n\n                break;\n            }\n        }\n\n        return;\n    }\n\n\n    public getOptionValueByKey(key: string) {\n        switch (key.toLowerCase()) {\n            case this.options.DEPTH_FROM.lowerCaseKey:\n                return this.options.DEPTH_FROM.value;\n            case this.options.DEPTH_TO.lowerCaseKey:\n                return this.options.DEPTH_TO.value;\n            case this.options.INSERT_ANCHOR.lowerCaseKey:\n                return this.options.INSERT_ANCHOR.value;\n            case this.options.WITH_LINKS.lowerCaseKey:\n                return this.options.WITH_LINKS.value;\n            case this.options.ORDERED_LIST.lowerCaseKey:\n                return this.options.ORDERED_LIST.value;\n            case this.options.UPDATE_ON_SAVE.lowerCaseKey:\n                return this.options.UPDATE_ON_SAVE.value;\n            case this.options.ANCHOR_MODE.lowerCaseKey:\n                return this.options.ANCHOR_MODE.value;\n            case this.options.BULLET_CHAR.lowerCaseKey:\n                return this.options.BULLET_CHAR.value;\n            case this.options.DETECT_AUTO_SET_SECTION.lowerCaseKey:\n                return this.options.DETECT_AUTO_SET_SECTION.value;\n        }\n    }\n\n    private parseBool(value: string) {\n        return value.toLocaleLowerCase() === 'true';\n    }\n\n    private parseValidNumber(value: string) {\n        let num = parseInt(value);\n\n        if (num < 1) {\n            return 1;\n        }\n\n        return num;\n    }\n}","module.exports = function(md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n  options.abbr = options.hasOwnProperty('abbr') ? options.abbr : false;\n  options.replaceLinksWithURL = options.hasOwnProperty('replaceLinksWithURL') ? options.replaceLinksWithURL : false;\n  options.htmlTagsToSkip = options.hasOwnProperty('htmlTagsToSkip') ? options.htmlTagsToSkip : [];\n  options.throwError = options.hasOwnProperty('throwError') ? options.throwError : false;\n\n  var output = md || '';\n\n  // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar)\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');\n      else\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n    if (options.gfm) {\n      output = output\n      // Header\n        .replace(/\\n={2,}/g, '\\n')\n        // Fenced codeblocks\n        .replace(/~{3}.*\\n/g, '')\n        // Strikethrough\n        .replace(/~~/g, '')\n        // Fenced codeblocks\n        .replace(/`{3}.*\\n/g, '');\n    }\n    if (options.abbr) {\n      // Remove abbreviations\n      output = output.replace(/\\*\\[.*\\]:.*\\n/, '');\n    }\n    output = output\n    // Remove HTML tags\n      .replace(/<[^>]*>/g, '')\n\n    var htmlReplaceRegex = new RegExp('<[^>]*>', 'g');\n    if (options.htmlTagsToSkip.length > 0) {\n      // Using negative lookahead. Eg. (?!sup|sub) will not match 'sup' and 'sub' tags.\n      var joinedHtmlTagsToSkip = '(?!' + options.htmlTagsToSkip.join(\"|\") + ')';\n\n      // Adding the lookahead literal with the default regex for html. Eg./<(?!sup|sub)[^>]*>/ig\n      htmlReplaceRegex = new RegExp(\n          '<' +\n          joinedHtmlTagsToSkip +\n          '[^>]*>', \n          'ig'\n      );\n    }\n\n    output = output\n      // Remove HTML tags\n      .replace(htmlReplaceRegex, '')\n      // Remove setext-style headers\n      .replace(/^[=\\-]{2,}\\s*$/g, '')\n      // Remove footnotes?\n      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n      // Remove images\n      .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '')\n      // Remove inline links\n      .replace(/\\[([^\\]]*?)\\][\\[\\(].*?[\\]\\)]/g, options.replaceLinksWithURL ? '$2' : '$1')\n      // Remove blockquotes\n      .replace(/^(\\n)?\\s{0,3}>\\s?/gm, '$1')\n      // .replace(/(^|\\n)\\s{0,3}>\\s?/g, '\\n\\n')\n      // Remove reference-style links?\n      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n      // Remove atx-style headers\n      .replace(/^(\\n)?\\s{0,}#{1,6}\\s*( (.+))? +#+$|^(\\n)?\\s{0,}#{1,6}\\s*( (.+))?$/gm, '$1$3$4$6')\n      // Remove * emphasis\n      .replace(/([\\*]+)(\\S)(.*?\\S)??\\1/g, '$2$3')\n      // Remove _ emphasis. Unlike *, _ emphasis gets rendered only if \n      //   1. Either there is a whitespace character before opening _ and after closing _.\n      //   2. Or _ is at the start/end of the string.\n      .replace(/(^|\\W)([_]+)(\\S)(.*?\\S)??\\2($|\\W)/g, '$1$3$4$5')\n      // Remove code blocks\n      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n      // Remove inline code\n      .replace(/`(.+?)`/g, '$1')\n      // // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n      // .replace(/\\n{2,}/g, '\\n\\n')\n      // // Remove newlines in a paragraph\n      // .replace(/(\\S+)\\n\\s*(\\S+)/g, '$1 $2')\n      // Replace strike through\n      .replace(/~(.*?)~/g, '$1');\n  } catch(e) {\n    if (options.throwError) throw e;\n\n    console.error(\"remove-markdown encountered error: %s\", e);\n    return md;\n  }\n  return output;\n};\n","import {\n    window,\n    Position,\n    Range,\n    TextEditorEdit,\n    TextDocument,\n    TextDocumentChangeEvent\n} from 'vscode';\n\nimport { Header } from \"./models/Header\";\nimport { ConfigManager } from './ConfigManager';\nimport { HeaderManager } from './HeaderManager';\nimport { AnchorMode } from './models/AnchorMode';\nimport { RegexStrings } from './models/RegexStrings';\nimport { TocManager } from './TocManager';\n\nexport class AutoMarkdownToc {\n\n    configManager = new ConfigManager();\n    headerManager = new HeaderManager(this.configManager);\n    tocManager = new TocManager();\n\n    public onDidChangeTextDocument(event: TextDocumentChangeEvent) {\n        if (event.contentChanges.length > 0) {\n            this.tocManager.updateTocRange(event.contentChanges);\n        }\n    }\n\n    public onDidSaveTextDocument() {\n        if (!this.configManager.options.UPDATE_ON_SAVE.value) {\n            return;\n        }\n\n        // Prevent save loop\n        if (this.configManager.options.isProgrammaticallySave) {\n            this.configManager.options.isProgrammaticallySave = false;\n            return;\n        }\n\n        let editor = window.activeTextEditor;\n        if (editor !== undefined) {\n            let doc = editor.document;\n\n            if (doc.languageId !== 'markdown') {\n                return;\n            }\n\n            let tocRange = this.tocManager.getTocRange();\n\n            if (!tocRange.isSingleLine) {\n                this.updateMarkdownToc();\n                this.configManager.options.isProgrammaticallySave = true;\n                doc.save();\n            }\n        }\n    }\n\n    public async updateMarkdownToc() {\n        let autoMarkdownToc = this;\n        let editor = window.activeTextEditor;\n\n        if (editor === undefined) {\n            return;\n        }\n\n        autoMarkdownToc.configManager.updateOptions();\n        let tocRange = autoMarkdownToc.tocManager.getTocRange();\n        let headerList = await autoMarkdownToc.headerManager.getHeaderList();\n        let document = editor.document;\n\n        editor.edit(async editBuilder => {\n            if (!tocRange.isSingleLine) {\n                editBuilder.delete(tocRange);\n                autoMarkdownToc.deleteAnchors(editBuilder);\n            }\n\n            // TODO: need to go back to this\n            // if (this.configManager.options.DETECT_AUTO_SET_SECTION.value) { // } && this.configManager.options.isOrderedListDetected) {\n            //     autoMarkdownToc.updateHeadersWithSections(editBuilder, headerList, document);\n\n            //     //rebuild header list, because headers have changed\n            //     headerList = await autoMarkdownToc.headerManager.getHeaderList();\n            // }\n\n            autoMarkdownToc.createToc(editBuilder, headerList, tocRange.start);\n            autoMarkdownToc.insertAnchors(editBuilder, headerList);\n        });\n    }\n\n    public deleteMarkdownToc() {\n        let autoMarkdownToc = this;\n        let editor = window.activeTextEditor;\n\n        if (editor === undefined) {\n            return;\n        }\n\n        editor.edit(function (editBuilder) {\n            let tocRange = autoMarkdownToc.tocManager.getTocRange();\n            if (tocRange.isSingleLine) {\n                return;\n            }\n\n            autoMarkdownToc.deleteAnchors(editBuilder);\n            editBuilder.delete(tocRange);\n        });\n    }\n\n    public updateHeadersWithSections(editBuilder: TextEditorEdit, headerList: Header[], document: TextDocument) {\n        headerList.forEach(header => {\n\n            if (header.range.start.line !== 0 && !document.lineAt(header.range.start.line - 1).isEmptyOrWhitespace) {\n                editBuilder.insert(new Position(header.range.start.line, 0), this.configManager.options.lineEnding);\n            }\n\n            if (this.configManager.options.ORDERED_LIST.value) {\n                editBuilder.replace(header.range, header.fullHeaderWithOrder);\n            } else {\n                editBuilder.replace(header.range, header.fullHeaderWithoutOrder);\n            }\n        });\n    }\n\n    public async updateMarkdownSections() {\n        this.configManager.updateOptions();\n\n        let headerList = await this.headerManager.getHeaderList();\n        let editor = window.activeTextEditor;\n        let config = this.configManager;\n\n        if (editor !== undefined) {\n            config.options.isOrderedListDetected = true;\n            let document = editor.document;\n            editor.edit(editBuilder => {\n                this.updateHeadersWithSections(editBuilder, headerList, document);\n            });\n        }\n    }\n\n    public async deleteMarkdownSections() {\n        this.configManager.updateOptions();\n        let headerList = await this.headerManager.getHeaderList();\n        let editor = window.activeTextEditor;\n        let config = this.configManager;\n\n        if (editor !== undefined && headerList !== undefined) {\n            config.options.isOrderedListDetected = false;\n            editor.edit(function (editBuilder) {\n                headerList.forEach(element => {\n                    editBuilder.replace(element.range, element.fullHeaderWithoutOrder);\n                });\n            });\n        }\n    }\n\n    /**\n     * insert anchor for a header\n     * @param editBuilder\n     * @param header\n     */\n    private insertAnchor(editBuilder: TextEditorEdit, header: Header) {\n        let anchorMatches = header.tocRowWithAnchor(header.tocWithoutOrder).match(RegexStrings.Instance.REGEXP_ANCHOR);\n        if (anchorMatches !== null) {\n            // let name = anchorMatches[1];\n            let text = [\n                this.configManager.options.lineEnding,\n                '<a id=\"',\n                header.anchor.id,\n                '\" name=\"',\n                header.anchor.name,\n                '\"></a>'];\n\n            let insertPosition = new Position(header.range.end.line, header.range.end.character);\n\n            if (this.configManager.options.ANCHOR_MODE.value === AnchorMode.bitbucket) {\n                text = text.slice(1);\n                text.push(this.configManager.options.lineEnding);\n                text.push(this.configManager.options.lineEnding);\n                insertPosition = new Position(header.range.start.line, 0);\n            }\n\n            editBuilder.insert(insertPosition, text.join(''));\n        }\n    }\n\n    private insertAnchors(editBuilder: TextEditorEdit, headerList: Header[]) {\n        if (!this.configManager.options.INSERT_ANCHOR.value) {\n            return;\n        }\n\n        headerList.forEach(header => {\n            this.insertAnchor(editBuilder, header);\n        });\n    }\n\n    private deleteAnchors(editBuilder: TextEditorEdit) {\n        let editor = window.activeTextEditor;\n        if (editor !== undefined) {\n            let doc = editor.document;\n            for (let index = 0; index < doc.lineCount; index++) {\n                let lineText = doc.lineAt(index).text;\n                if (lineText.match(RegexStrings.Instance.REGEXP_MARKDOWN_ANCHOR) === null) {\n                    continue;\n                }\n\n                let startPosition = this.getStartPositionOfAnchorLine(index, doc);\n\n                let range = new Range(startPosition, new Position(startPosition.line + 1, 0));\n                editBuilder.delete(range);\n            }\n        }\n    }\n\n    private getStartPositionOfAnchorLine(index: number, doc: TextDocument) {\n        // To ensure the anchor will not insert an extra empty line\n        let startPosition = new Position(index, 0);\n\n        if (this.configManager.options.ANCHOR_MODE.value === AnchorMode.bitbucket) {\n            if (index > 0 && doc.lineAt(index - 1).text.length === 0) {\n                startPosition = new Position(index - 2, 0);\n            }\n        }\n\n        return startPosition;\n    }\n\n    private createToc(editBuilder: TextEditorEdit, headerList: Header[], insertPosition: Position) {\n\n        let text: string[] = [];\n\n        //// TOC STAT: the custom option IS inside the toc start.\n        text = text.concat(this.generateTocStartIndicator());\n\n        //// HEADERS\n        let minimumRenderedDepth = headerList[0].depth;\n        headerList.forEach(header => {\n            minimumRenderedDepth = Math.min(minimumRenderedDepth, header.depth);\n        });\n\n        let tocRows: string[] = [];\n\n        headerList.forEach(header => {\n            if (header.depth >= this.configManager.options.DEPTH_FROM.value && !header.isIgnored) {\n                let row = this.generateTocRow(header, minimumRenderedDepth);\n                tocRows.push(row);\n            }\n        });\n\n        text.push(tocRows.join(this.configManager.options.lineEnding));\n\n        //// TOC END\n        text.push(this.configManager.options.lineEnding + \"<!-- /TOC -->\");\n\n        // insert\n        editBuilder.insert(insertPosition, text.join(this.configManager.options.lineEnding));\n    }\n\n    private generateTocRow(header: Header, minimumRenderedDepth: number) {\n        let row: string[] = [];\n\n        // Indentation\n        let indentRepeatTime = header.depth - Math.max(this.configManager.options.DEPTH_FROM.value, minimumRenderedDepth);\n        row.push(this.configManager.options.tab.repeat(indentRepeatTime));\n\n        row.push(this.configManager.options.BULLET_CHAR.value);\n\n        row.push(' ');\n\n        // TOC with or without link and order\n        if (this.configManager.options.WITH_LINKS.value) {\n            row.push(header.tocRowWithAnchor(this.getTocString(header)));\n        } else {\n            row.push(this.getTocString(header));\n        }\n\n        return row.join('');\n    }\n\n    private getTocString(header: Header) {\n        if (this.configManager.options.ORDERED_LIST.value) {\n            return header.tocWithOrder;\n        } else {\n            return header.tocWithoutOrder;\n        }\n    }\n\n    private generateTocStartIndicator() {\n        let tocStartIndicator: string[] = [];\n\n        tocStartIndicator.push('<!-- TOC ');\n\n        this.generateCustomOptionsInTocStart(tocStartIndicator);\n\n        tocStartIndicator.push('-->' + this.configManager.options.lineEnding);\n\n        return tocStartIndicator.join('');\n    }\n\n    private generateCustomOptionsInTocStart(tocStartIndicator: string[]) {\n        // custom options\n        this.configManager.options.optionsFlag.forEach(optionKey => {\n            if (this.configManager.options.optionsFlag.indexOf(optionKey) !== -1) {\n                tocStartIndicator.push(optionKey + ':' + this.configManager.getOptionValueByKey(optionKey) + ' ');\n            }\n        });\n    }\n\n    dispose() {\n    }\n}","'use strict';\n\nvar emojiRegex = require('emoji-regex');\nvar removeMd = require('remove-markdown');\n\n// https://github.com/joyent/node/blob/192192a09e2d2e0d6bdd0934f602d2dbbf10ed06/tools/doc/html.js#L172-L183\nfunction getNodejsId(text, repetition) {\n  text = text.replace(/[^a-z0-9]+/g, '_');\n  text = text.replace(/^_+|_+$/, '');\n  text = text.replace(/^([^a-z])/, '_$1');\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n  // An example may be found here: http://nodejs.org/api/domain.html#domain_example_1\n  if (repetition) {\n    text += '_' + repetition;\n  }\n\n  return text;\n}\n\nfunction basicGithubId(text) {\n  return text.replace(/ /g,'-')\n    // escape codes\n    .replace(/%([abcdef]|\\d){2,2}/ig, '')\n    // single chars that are removed\n    .replace(/[\\/?!:\\[\\]`.,()*\"';{}+=<>~\\$|#@&–—]/g,'')\n    // CJK punctuations that are removed\n    .replace(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/g, '')\n    ;\n\n}\n\nfunction getGithubId(text, repetition) {\n  text = basicGithubId(text);\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n  if (repetition) {\n    text += '-' + repetition;\n  }\n\n  // Strip emojis\n  text = text.replace(emojiRegex(), '')\n\n  // Strip embedded markdown formatting\n  text = removeMd(text)\n\n  return text;\n}\n\nfunction getBitbucketId(text, repetition) {\n  text = 'markdown-header-' + basicGithubId(text);\n\n  // BitBucket condenses consecutive hyphens (GitHub doesn't)\n  text = text.replace(/--+/g, '-');\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n  // https://groups.google.com/d/msg/bitbucket-users/XnEWbbzs5wU/Fat0UdIecZkJ\n  if (repetition) {\n    text += '_' + repetition;\n  }\n\n  return text;\n}\n\nfunction basicGhostId(text) {\n  return text.replace(/ /g,'')\n    // escape codes are not removed\n    // single chars that are removed\n    .replace(/[\\/?:\\[\\]`.,()*\"';{}\\-+=<>!@#%^&\\\\\\|]/g,'')\n    // $ replaced with d\n    .replace(/\\$/g, 'd')\n    // ~ replaced with t\n    .replace(/~/g, 't')\n    ;\n}\n\nfunction getGhostId(text) {\n  text = basicGhostId(text);\n\n  // Repetitions not supported\n\n  return text;\n}\n\n// see: https://github.com/gitlabhq/gitlabhq/blob/master/doc/user/markdown.md#header-ids-and-links\nfunction getGitlabId(text, repetition) {\n  text = text\n    .replace(/<(.*)>(.*)<\\/\\1>/g,\"$2\") // html tags\n    .replace(/!\\[.*\\]\\(.*\\)/g,'')      // image tags\n    .replace(/\\[(.*)\\]\\(.*\\)/,\"$1\")    // url\n    .replace(/\\s+/g, '-')              // All spaces are converted to hyphens\n    .replace(/[\\/?!:\\[\\]`.,()*\"';{}+=<>~\\$|#@]/g,'') // All non-word text (e.g., punctuation, HTML) is removed\n    .replace(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/g, '') // remove CJK punctuations\n    .replace(/[-]+/g,'-')              // duplicated hyphen\n    .replace(/^-/,'')                  // ltrim hyphen\n    .replace(/-$/,'');                 // rtrim hyphen\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n  if (repetition) {\n    text += '-' + repetition;\n  }\n  return text;\n}\n\n\n/**\n * Generates an anchor for the given header and mode.\n *\n * @name anchorMarkdownHeader\n * @function\n * @param header      {String} The header to be anchored.\n * @param mode        {String} The anchor mode (github.com|nodejs.org|bitbucket.org|ghost.org|gitlab.com).\n * @param repetition  {Number} The nth occurrence of this header text, starting with 0. Not required for the 0th instance.\n * @param moduleName  {String} The name of the module of the given header (required only for 'nodejs.org' mode).\n * @return            {String} The header anchor that is compatible with the given mode.\n */\nmodule.exports = function anchorMarkdownHeader(header, mode, repetition, moduleName) {\n  mode = mode || 'github.com';\n  var replace;\n  var customEncodeURI = encodeURI;\n\n  switch(mode) {\n    case 'github.com':\n      replace = getGithubId;\n      customEncodeURI = function(uri) {\n        var newURI = encodeURI(uri);\n\n        // encodeURI replaces the zero width joiner character\n        // (used to generate emoji sequences, e.g.Female Construction Worker 👷🏼‍♀️)\n        // github doesn't URL encode them, so we replace them after url encoding to preserve the zwj character.\n        return newURI.replace(/%E2%80%8D/g, '\\u200D');\n      };\n      break;\n    case 'bitbucket.org':\n      replace = getBitbucketId;\n      break;\n    case 'gitlab.com':\n      replace = getGitlabId;\n      break;\n    case 'nodejs.org':\n      if (!moduleName) throw new Error('Need module name to generate proper anchor for ' + mode);\n      replace = function (hd, repetition) {\n          return getNodejsId(moduleName + '.' + hd, repetition);\n      };\n      break;\n    case 'ghost.org':\n      replace = getGhostId;\n      break;\n    default:\n      throw new Error('Unknown mode: ' + mode);\n  }\n\n  function asciiOnlyToLowerCase(input) {\n    var result = '';\n    for (var i = 0; i < input.length; ++i) {\n      if (input[i] >= 'A' && input[i] <= 'Z') {\n        result += input[i].toLowerCase();\n      } else {\n        result += input[i];\n      }\n    }\n    return result;\n  }\n\n  var href = replace(asciiOnlyToLowerCase(header.trim()), repetition);\n\n  return '[' + header + '](#' + customEncodeURI(href) + ')';\n};\n","module.exports = require(\"os\");","import { Header } from \"./models/Header\";\nimport { ConfigManager } from \"./ConfigManager\";\nimport { window, DocumentSymbol, commands, Uri, TextEditor, SymbolKind } from \"vscode\";\nimport { RegexStrings } from \"./models/RegexStrings\";\n\n\nexport class HeaderManager {\n    configManager: ConfigManager;\n\n    constructor(configManager: ConfigManager) {\n        this.configManager = configManager;\n    }\n     \n    private async getDocumentSymbols(fileUri: Uri) {                \n        let allSymbols = <DocumentSymbol[]>await commands.executeCommand(\"vscode.executeDocumentSymbolProvider\", fileUri);\n\n        // Markdown headers can only be strings. Exclude all other symbols.\n        // #60: With plantuml code blocks, the @startmindmap/@endmindmap sentinels\n        // cause getDocumentSymbols to return Object kinds as well which results in empty TOCs\n        return allSymbols.filter(function(sym){\n            return sym.kind === SymbolKind.String;\n        });\n    }\n\n    public async getHeaderList() {\n        let headerList: Header[] = [];\n        let editor = window.activeTextEditor;\n\n        if (editor !== undefined) {\n\n            let fileUri = Uri.file(editor.document.fileName);\n           \n            let symbols = await this.getDocumentSymbols(fileUri);            \n\n            let headerLevels = new Map<number, number>();\n            let allHeaders = new Array<Header>();\n\n            this.convertAllFirstLevelHeader(symbols, allHeaders, headerLevels);\n\n            let consideredDepthToInclude = this.getMostPopularHeaderDepth(headerLevels);\n\n\n            for (let index = 0; index < allHeaders.length; index++) {\n                let header = allHeaders[index];\n\n                // only level of consideredDepthToInclude\n                if (header.depth > consideredDepthToInclude) {\n                    continue;\n                }\n\n                header.isIgnored = this.getIsHeaderIgnored(header, editor);\n                header.orderArray = this.calculateHeaderOrder(header, headerList);\n                header.orderedListString = header.orderArray.join('.') + \".\";\n\n                if (header.depth <= this.configManager.options.DEPTH_TO.value) {\n                    headerList.push(header);\n                    this.addHeaderChildren(symbols[index], headerList, editor);\n                }\n            }\n\n            // violation of clean code\n            this.detectAutoOrderedHeader(headerList);\n        }\n\n        return headerList;\n    }\n\n    private getIsHeaderIgnored(header: Header, editor: TextEditor) {\n        let previousLine = header.range.start.line - 1;\n        if (previousLine > 0) {\n            if (editor.document.lineAt(previousLine).text.match(RegexStrings.Instance.REGEXP_IGNORE_TITLE)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private getMostPopularHeaderDepth(headerLevels: Map<number, number>) {\n        let mostPopularHeaderDepth = 0;\n        let mostPopularHeaderDepthCount = 0;\n\n        headerLevels.forEach((value: number, key: number) => {\n            if (value >= mostPopularHeaderDepth) {\n                mostPopularHeaderDepthCount = value;\n                mostPopularHeaderDepth = key;\n            }\n        });\n\n        return mostPopularHeaderDepth;\n    }\n\n    private convertAllFirstLevelHeader(symbols: DocumentSymbol[], allHeaders: Header[], headerLevels: Map<number, number>) {\n        for (let index = 0; index < symbols.length; index++) {            \n            let header = new Header(this.configManager.options.ANCHOR_MODE.value);\n            header.convertFromSymbol(symbols[index]);\n            allHeaders.push(header);\n\n            let depthCount = headerLevels.get(header.depth);\n\n            if (depthCount === undefined) {\n                headerLevels.set(header.depth, 1);\n            }\n            else {\n                depthCount = depthCount + 1;\n                headerLevels.set(header.depth, depthCount);\n            }            \n        }\n    }\n\n    private addHeaderChildren(symbol: DocumentSymbol, headerList: Header[], editor: TextEditor) {\n        if (symbol.children.length > 0) {\n            for (let index = 0; index < symbol.children.length; index++) {\n\n                let header = new Header(this.configManager.options.ANCHOR_MODE.value);\n\n                header.convertFromSymbol(symbol.children[index]);\n\n                header.isIgnored = this.getIsHeaderIgnored(header, editor);\n\n                header.orderArray = this.calculateHeaderOrder(header, headerList);\n                header.orderedListString = header.orderArray.join('.') + \".\";\n\n                if (header.depth <= this.configManager.options.DEPTH_TO.value) {\n                    headerList.push(header);\n                    this.addHeaderChildren(symbol.children[index], headerList, editor);\n                }\n            }\n        }\n    }\n\n    private detectAutoOrderedHeader(headerList: Header[]) {\n\n        this.configManager.options.isOrderedListDetected = false;\n\n        for (let index = 0; index < headerList.length; index++) {\n            if (headerList[index].orderedListString !== undefined && headerList[index].orderedListString !== '') {\n                this.configManager.options.isOrderedListDetected = true;\n                break;\n            }\n        }\n    }\n\n    public calculateHeaderOrder(headerBeforePushToList: Header, headerList: Header[]) {\n\n        if (headerList.length === 0) {\n            // special case: First header\n            let orderArray = new Array(headerBeforePushToList.depth);\n            orderArray[headerBeforePushToList.depth - 1] = 1;\n            return orderArray;\n        }\n\n        let lastHeaderInList = headerList[headerList.length - 1];\n\n        if (headerBeforePushToList.depth < lastHeaderInList.depth) {\n            // continue of the parent level\n\n            let previousHeader: Header | undefined;\n\n            for (let index = headerList.length - 1; index >= 0; index--) {\n                if (headerList[index].depth === headerBeforePushToList.depth) {\n                    previousHeader = headerList[index];\n                    break;\n                }\n            }\n\n            if (previousHeader !== undefined) {\n                let orderArray = Object.assign([], previousHeader.orderArray);\n                orderArray[orderArray.length - 1]++;\n\n                return orderArray;\n            } else {\n                // special case: first header has greater level than second header\n                let orderArray = new Array(headerBeforePushToList.depth);\n                orderArray[headerBeforePushToList.depth - 1] = 1;\n                return orderArray;\n            }\n        }\n\n        if (headerBeforePushToList.depth > lastHeaderInList.depth) {\n            // child level of previous\n            // order start with 1\n            let orderArray = Object.assign([], lastHeaderInList.orderArray);\n            orderArray.push(1);\n\n            return orderArray;\n        }\n\n        if (headerBeforePushToList.depth === lastHeaderInList.depth) {\n            // the same level, increase last item in orderArray\n            let orderArray = Object.assign([], lastHeaderInList.orderArray);\n            orderArray[orderArray.length - 1]++;\n\n            return orderArray;\n        }\n\n        return [];\n    }\n}","import {\n    Range, Position, DocumentSymbol\n} from 'vscode';\nimport { AnchorMode } from './AnchorMode';\nimport { Anchor } from './Anchor';\nimport { RegexStrings } from './RegexStrings';\n\nexport class Header {\n    headerMark: string = \"\";\n    orderedListString: string = \"\";\n    dirtyTitle: string = \"\";\n    range: Range;\n\n    isIgnored: boolean = false;\n\n    orderArray: number[] = [];\n\n    anchorMode: AnchorMode = AnchorMode.github;\n\n    anchor: Anchor;\n\n    constructor(anchorMode: AnchorMode) {\n        this.anchorMode = anchorMode;\n        this.range = new Range(0, 0, 0, 0);\n        this.anchor = new Anchor(\"\");\n    }\n\n    public convertFromSymbol(symbol: DocumentSymbol) {\n        let headerTextSplit = symbol.name.match(RegexStrings.Instance.REGEXP_HEADER_META);\n\n        if (headerTextSplit !== null) {\n            this.headerMark = headerTextSplit[1];\n            this.orderedListString = headerTextSplit[2];\n            this.dirtyTitle = headerTextSplit[4];\n        }\n\n        this.range = new Range(symbol.range.start, new Position(symbol.range.start.line, symbol.name.length));\n        this.anchor = new Anchor(this.cleanUpTitle(this.dirtyTitle));\n    }\n\n    public get depth(): number {\n        return this.headerMark.length;\n    }\n\n    public get isHeader(): boolean {\n        return this.headerMark !== \"\";\n    }\n\n    public tocRowWithAnchor(tocString: string): string {\n        let title = this.cleanUpTitle(tocString);\n        let ANCHOR_MARKDOWN_HEADER = require('anchor-markdown-header');\n        return ANCHOR_MARKDOWN_HEADER(title, this.anchorMode);\n    }\n\n    public get tocWithoutOrder(): string {\n        return this.dirtyTitle;\n    }\n\n    public get tocWithOrder(): string {\n        return this.orderArray.join('.') + \". \" + this.tocWithoutOrder;\n    }\n\n    public get fullHeaderWithOrder(): string {\n        return this.headerMark + \" \" + this.tocWithOrder;\n    }\n\n    public get fullHeaderWithoutOrder(): string {\n        return this.headerMark + \" \" + this.tocWithoutOrder;\n    }\n\n    private cleanUpTitle(dirtyTitle: string) {\n        let title = dirtyTitle.replace(/\\[(.+)]\\([^)]*\\)/gi, \"$1\"); // replace link\n        title = title.replace(/<!--.+-->/gi, \"\"); // replace comment\n        title = title.replace(/\\#*`|\\(|\\)/gi, \"\").trim(); // replace special char\n        return title;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {\r\n    commands,\r\n    ExtensionContext,\r\n    TextDocumentChangeEvent,\r\n    workspace\r\n} from 'vscode';\r\n\r\nimport { AutoMarkdownToc } from './AutoMarkdownToc';\r\n\r\nexport function activate(context: ExtensionContext) {\r\n\r\n    // create a AutoMarkdownToc\r\n    let autoMarkdownToc = new AutoMarkdownToc();\r\n\r\n    let updateMarkdownToc = commands.registerCommand('extension.updateMarkdownToc', async () => { await autoMarkdownToc.updateMarkdownToc(); });\r\n    let deleteMarkdownToc = commands.registerCommand('extension.deleteMarkdownToc', () => { autoMarkdownToc.deleteMarkdownToc(); });\r\n    let updateMarkdownSections = commands.registerCommand('extension.updateMarkdownSections', () => { autoMarkdownToc.updateMarkdownSections(); });\r\n    let deleteMarkdownSections = commands.registerCommand('extension.deleteMarkdownSections', () => { autoMarkdownToc.deleteMarkdownSections(); });\r\n\r\n    // Events\r\n    let saveMarkdownToc = workspace.onDidSaveTextDocument(() => {\r\n        autoMarkdownToc.onDidSaveTextDocument();\r\n    });\r\n    let changedTextDocument = workspace.onDidChangeTextDocument((event: TextDocumentChangeEvent) => {\r\n        autoMarkdownToc.onDidChangeTextDocument(event);\r\n    });\r\n\r\n    // Add to a list of disposables which are disposed when this extension is deactivated.\r\n    context.subscriptions.push(updateMarkdownToc);\r\n    context.subscriptions.push(deleteMarkdownToc);\r\n    context.subscriptions.push(updateMarkdownSections);\r\n    context.subscriptions.push(deleteMarkdownSections);\r\n\r\n    context.subscriptions.push(saveMarkdownToc);\r\n    context.subscriptions.push(changedTextDocument);\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() { }"],"names":["getNextLineIndexIsNotInCode","index","doc","currentLineIndex","lineCount","this","isLineStartOrEndOfCodeBlock","lineNumber","nextLine","lineAt","text","isCodeStyle1","match","RegexStrings","Instance","REGEXP_CODE_BLOCK1","isCodeStyle2","REGEXP_CODE_BLOCK2","constructor","scanForTocRange","editor","window","activeTextEditor","undefined","tocRange","Range","start","end","document","Utilities","lineText","REGEXP_TOC_START","REGEXP_IGNORE_TITLE","Position","REGEXP_TOC_STOP","length","selection","active","getTocRange","updateTocRange","contentChanges","range","line","REGEXP_TOC_CONFIG","REGEXP_TOC_CONFIG_ITEM","REGEXP_MARKDOWN_ANCHOR","REGEXP_ANCHOR","REGEXP_HEADER_META","REGEXP_UNIQUE_CONFIG_START","REGEXP_UNIQUE_CONFIG_STOP","REGEXP_UNIQUE_CONFIG_LINE","_instance","AnchorMode","headerText","id","name","toLowerCase","replace","encodeURIComponent","key","defaultWorkspaceValue","lowerCaseKey","toLocaleLowerCase","workspaceValue","value","uniqueValue","optionsFlag","isProgrammaticallySave","isOrderedListDetected","DEPTH_FROM","Dictionary","DEPTH_TO","INSERT_ANCHOR","WITH_LINKS","ORDERED_LIST","UPDATE_ON_SAVE","ANCHOR_MODE","github","BULLET_CHAR","DETECT_AUTO_SET_SECTION","extensionName","EOL","lineEnding","tabSize","insertSpaces","autoSave","tab","module","exports","require","options","Options","updateOptions","loadConfigurations","loadCustomOptions","workspace","getConfiguration","get","repeat","forEach","element","pair","exec","push","parseValidNumber","Math","max","parseBool","getOptionValueByKey","num","parseInt","md","listUnicodeChar","hasOwnProperty","stripListLeaders","gfm","useImgAltText","abbr","replaceLinksWithURL","htmlTagsToSkip","throwError","output","htmlReplaceRegex","RegExp","joinedHtmlTagsToSkip","join","e","console","error","configManager","ConfigManager","headerManager","HeaderManager","tocManager","TocManager","onDidChangeTextDocument","event","onDidSaveTextDocument","languageId","isSingleLine","updateMarkdownToc","save","autoMarkdownToc","headerList","getHeaderList","edit","async","editBuilder","delete","deleteAnchors","createToc","insertAnchors","deleteMarkdownToc","updateHeadersWithSections","header","isEmptyOrWhitespace","insert","fullHeaderWithOrder","fullHeaderWithoutOrder","updateMarkdownSections","config","deleteMarkdownSections","insertAnchor","tocRowWithAnchor","tocWithoutOrder","anchor","insertPosition","character","bitbucket","slice","startPosition","getStartPositionOfAnchorLine","concat","generateTocStartIndicator","minimumRenderedDepth","depth","min","tocRows","isIgnored","row","generateTocRow","indentRepeatTime","getTocString","tocWithOrder","tocStartIndicator","generateCustomOptionsInTocStart","optionKey","indexOf","dispose","emojiRegex","removeMd","basicGithubId","getGithubId","repetition","getBitbucketId","getGhostId","basicGhostId","getGitlabId","mode","moduleName","customEncodeURI","encodeURI","uri","Error","hd","getNodejsId","href","input","result","i","asciiOnlyToLowerCase","trim","getDocumentSymbols","fileUri","commands","executeCommand","filter","sym","kind","SymbolKind","String","Uri","file","fileName","symbols","headerLevels","Map","allHeaders","Array","convertAllFirstLevelHeader","consideredDepthToInclude","getMostPopularHeaderDepth","getIsHeaderIgnored","orderArray","calculateHeaderOrder","orderedListString","addHeaderChildren","detectAutoOrderedHeader","previousLine","mostPopularHeaderDepth","mostPopularHeaderDepthCount","Header","convertFromSymbol","depthCount","set","symbol","children","headerBeforePushToList","lastHeaderInList","previousHeader","Object","assign","anchorMode","headerMark","dirtyTitle","Anchor","headerTextSplit","cleanUpTitle","isHeader","tocString","title","ANCHOR_MARKDOWN_HEADER","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","context","AutoMarkdownToc","registerCommand","saveMarkdownToc","changedTextDocument","subscriptions"],"sourceRoot":""}